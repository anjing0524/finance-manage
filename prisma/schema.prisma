// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id   String  @id @default(cuid())
  name String?
  pwd  String

  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

// 债务信息
enum DebtType {
  // 银行
  BANK
  // 私人借贷
  PRIVATE_LOAN
  // 网贷
  ONLINE_LOAN
}

enum RepaymentMode {
  // 等额本金
  EQUAL_PRINCIPAL
  // 等额本息
  EQUAL_INSTALLMENT
  // 先息后本
  INTEREST_FIRST
}

model Debt {
  id            String        @id @default(cuid())
  // 借贷名字
  name          String
  // 借贷类型
  type          DebtType      @map("type")
  // 借贷金额
  amount        Float
  // 利率
  rate          Float
  // 借贷日期
  borrowDate    DateTime      @map("borrow_date")
  // 分期期数
  installment   Int?
  // 还款方式
  repaymentMode RepaymentMode @map("repayment_mode")
  repayments    Repayment[]

  @@map("debts")
}

// 还款信息
model Repayment {
  id        String   @id @default(cuid())
  // 还款日期
  repayDate DateTime @map("repay_date")
  // 还款金额
  amount    Float
  // 剩余待还
  balance   Float?
  // 是否已经还款
  isPaid    Boolean? @default(false) // New field for whether the repayment has been made
  // 关联信息
  debtId    String   @map("debt_id")
  debt      Debt     @relation(fields: [debtId], references: [id], onDelete: Cascade)

  @@map("repayments")
}
